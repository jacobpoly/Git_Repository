<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="event_ns">

<!-- member_code >> client_code 변경 <수정> -->
	<select id="sel_mem2client" parameterType="str" resultType="studentVO"> <!-- STUDENT_STT_BRN  03 (재학생) -->
	
SELECT	CASE WHEN ENTER_CNT > 0 THEN 'Y' ELSE 'N' END ENTER_YN				-- NCHAR(1)
		, ENTER_CNT															-- INT
		, CASE WHEN A.STUDENT_STT_BRN = '03' THEN 'Y' ELSE 'N' END IN_COLLEGE_YN	-- NCHAR(1)
		, A.MEMBER_CODE														-- NVARCHAR(10)
		, A.CLIENT_CODE														-- NVARCHAR(10)
		, A.CLIENT_MEM_CODE													-- INT
		-- 20140414(EDIT)
		, A.STUDENT_STT_CODE
FROM	(
			
			SELECT	A.CLIENT_MEM_CODE, A.MEMBER_CODE, A.CLIENT_CODE, A.STUDENT_STT_BRN, A.STUDENT_STT_CODE
					, CASE WHEN B.CLIENT_MEM_CODE IS NULL THEN 0 ELSE 1 END ENTER_CNT
			FROM	G2_KCMS.dbo.VW_STA_STUDENT A
			LEFT	OUTER JOIN DBO.TB_MKB_EVENT_ENTER B ON A.CLIENT_MEM_CODE = B.CLIENT_MEM_CODE AND B.EVENT_NO = 1
			WHERE	1=1
			AND		A.CLIENT_MEM_CODE = #{client_mem_code} -- 응모 이력이 없는 친구
			
)A
	</select>

	
	 
	<!-- 진행 데이터 재학생 재학생 수, 응모자 수, 가중치 연산 데이터 (cs, es) --> 
	 <select id="sel_progressData" parameterType="str" resultType="progressDataVO">
	 SELECT	
	 		A.in_college											
			, A.enter_cnt											
			, DATEDIFF(S, B.EVENT_START_DATE, GETDATE()) as cs_time		
			, DATEDIFF(S, EVENT_START_DATE, B.EVENT_END_DATE)  as es_time	
		FROM (
				SELECT	SUM(A.재학생) as in_college, SUM(A.응모여부) as enter_cnt
				--, (SELECT EVENT_NO, EVENT_NAME FROM G2_KEMS.DBO.TB_MKB_EVENT WHERE EVENT_NO = 1)
		FROM (
				SELECT	1 [재학생], CASE WHEN C.CLIENT_MEM_CODE IS NULL THEN 0 ELSE 1 END [응모여부]
				FROM	G2_KEMS.DBO.TB_CLB_MEMBER A
				INNER	JOIN G2_KEMS.DBO.TB_CLB_STUDENT B ON A.CLIENT_MEM_CODE = B.CLIENT_MEM_CODE
				LEFT	OUTER JOIN G2_KEMS.DBO.TB_MKB_EVENT_ENTER C ON B.CLIENT_MEM_CODE = C.CLIENT_MEM_CODE
				WHERE	A.CLIENT_CODE =#{client_code}
				AND		A.CURRENT_APP_YN = 'Y'
				AND		B.STUDENT_STT_CODE IN ('31','32','33','34')
		) A
	)A
	INNER	JOIN (
		SELECT EVENT_START_DATE, EVENT_END_DATE, CONVERT(NCHAR(8), GETDATE(), 112) CURR_DATE
		FROM DBO.TB_MKB_EVENT 
		WHERE EVENT_NO = 1
	)B ON 1=1
	 
	 </select>
	 

<!-- 모든 상품 리스트 출력  <수정> -->
	<select id="sel_product_list" parameterType="str" resultType="productVO">
	SELECT	D.PRODUCT_NAME											-- NVARCHAR(30)
		, C.LEFT_PRODUCT_CNT									-- INT
		, C.PRODUCT_CNT									-- INT
		, (	SELECT	SUM(LEFT_PRODUCT_CNT)
			FROM	DBO.TB_MKB_EVENT_PRODUCT_CONFIG_CLIENT 
			WHERE	EVENT_NO = 1 
			AND		EVENT_SCHEDULE_SEQ = 1 
			AND		CLIENT_CODE = #{client_code}) AS LEFT_PRODUCT_TOTAL	-- INT
		, (	SELECT	SUM(PRODUCT_CNT)
			FROM	DBO.TB_MKB_EVENT_PRODUCT_CONFIG_CLIENT 
			WHERE	EVENT_NO = 1 
			AND		EVENT_SCHEDULE_SEQ = 1 
			AND		CLIENT_CODE =#{client_code}) AS PRODUCT_TOTAL	-- INT
FROM	DBO.TB_MKB_EVENT A
INNER	JOIN DBO.TB_MKB_EVENT_CLIENT B ON A.EVENT_NO = B.EVENT_NO
INNER	JOIN DBO.TB_MKB_EVENT_PRODUCT_CONFIG_CLIENT C ON B.EVENT_NO = C.EVENT_NO AND B.CLIENT_CODE = C.CLIENT_CODE
INNER	JOIN DBO.TB_MKA_PRODUCT D ON C.PRODUCT_NO = D.PRODUCT_NO
WHERE	1=1
AND		A.EVENT_NO = 1
AND		B.CLIENT_CODE = #{client_code}
	</select>

<!--  상품 번호의 대한 정보 출력 -->
	<select id="sel_product" parameterType="h_map" resultType="productVO">
		SELECT	C.PRODUCT_NO			-- INT
			, D.PRODUCT_NAME		-- NVARCHAR(30)
			, C.LEFT_PRODUCT_CNT	-- INT
		FROM	DBO.TB_MKB_EVENT A
		INNER	JOIN DBO.TB_MKB_EVENT_CLIENT B ON A.EVENT_NO = B.EVENT_NO
		INNER	JOIN DBO.TB_MKB_EVENT_PRODUCT_CONFIG_CLIENT C ON B.EVENT_NO = C.EVENT_NO AND B.CLIENT_CODE = C.CLIENT_CODE
		INNER	JOIN DBO.TB_MKA_PRODUCT D ON C.PRODUCT_NO = D.PRODUCT_NO
		WHERE	1=1
		AND		A.EVENT_NO = 1
		AND		B.CLIENT_CODE =#{client_code}
		AND		D.PRODUCT_NO =#{product_no}
		
	</select>
	
	<!-- 엑셀 출력 -->
	<select id="sel_excel_list" resultType="excelVO">
	SELECT
		ISNULL(A.MEMBER_CODE , '')[MEMBER_CODE]
		,ISNULL( A.MEMBER_NAME , '')[NAME]
		,ISNULL(  A.STUDENT_STT , '')[EDU_STATE]
		,ISNULL( A.CLIENT_NAME , '')[CAMPUS_NAME]
		, ISNULL( A.CLASS_NAME , '')[CLASS_NAME]
		, ISNULL( A.COURSE_NAME , '')[AFFILIATE]
		, ISNULL( A.PRODUCT_NAME , '')[PRODUCT]
		, A.LOG_DTTM [LOGIN_DATE]
		, A.FIRST_REG_DTTM [PARTICIPATION]
		, ISNULL( A.EVENT_MESSAGE , '')[EVENT_MSG]
		, ISNULL( A.EVENT_ENTER_YN, '') [ENTER_YN]
		, ISNULL( A.STUDENT_ADDR, '') [ADDRESS]
		, ISNULL( A.MOTHER_HANDPHONE_NO , '')[PHONE]
FROM (
			SELECT	STU.MEMBER_CODE
					, G2_KEMS.dbo.FN_SYD_GET_LOCALE_VALUE(STU.N_LOCALE_CODE,'KR') [MEMBER_NAME]
					, CASE	WHEN STU.STUDENT_STT_BRN = '01' THEN '예비'
							WHEN STU.STUDENT_STT_BRN = '02' THEN '대기'
							WHEN STU.STUDENT_STT_BRN = '03' THEN '재학'	
							WHEN STU.STUDENT_STT_BRN = '04' THEN '휴학'
						END STUDENT_STT
					, G2_KEMS.DBO.FN_CLA_GET_CLIENT_NAME(STU.CLIENT_CODE, 'KR', 'D') [CLIENT_NAME]
					, CLASS.CLASS_NAME
					, G2_KEMS.dbo.FN_SYD_GET_LOCALE_VALUE(CRS.N_LOCALE_CODE, 'KR') [COURSE_NAME]
					, EV_PROD.PRODUCT_NAME
					, EV_ENT.FIRST_REG_DTTM
					, EV_ENT.EVENT_MESSAGE
					, CASE	WHEN EV_ENT.FIRST_REG_DTTM IS NULL THEN 'N' ELSE 'Y' END EVENT_ENTER_YN
					, STU.ADDRESS +' '+ STU.DETAIL_ADR STUDENT_ADDR
					, STU.MOTHER_HANDPHONE_NO MOTHER_HANDPHONE_NO
					, STU.CLIENT_MEM_CODE
					, LG.LOG_DTTM
			FROM	G2_LOGDB.DBO.TB_CON_LOGIO_HOMEPAGE LG
			INNER	JOIN G2_KCMS.DBO.VW_STA_STUDENT STU ON LG.CLIENT_MEM_CODE = STU.CLIENT_MEM_CODE
			LEFT	OUTER JOIN DBO.TB_MKB_EVENT_ENTER EV_ENT ON LG.CLIENT_MEM_CODE = EV_ENT.CLIENT_MEM_CODE AND EV_ENT.EVENT_NO = 1
			LEFT	OUTER JOIN DBO.TB_MKA_PRODUCT EV_PROD ON EV_ENT.PRODUCT_NO = EV_PROD.PRODUCT_NO
			LEFT	OUTER JOIN (
									SELECT	ROW_NUMBER() OVER (PARTITION BY A.CLIENT_MEM_CODE ORDER BY B.MANAGE_GBN, TL_STT, STATUS_SRT_DATE DESC) RN
											, A.CLIENT_MEM_CODE
											, B.CLASS_NAME
									FROM	G2_KCMS.dbo.TB_CLB_CLASS_ASSIGN A WITH (NOLOCK)
									INNER	JOIN G2_KCMS.dbo.TB_CLB_CLASS B WITH (NOLOCK) ON A.CLIENT_CODE = B.CLIENT_CODE AND A.CLASS_CODE = B.CLASS_CODE
									WHERE	A.TL_STT IN ('01','02')
									AND		B.MANAGE_STT = '01'	-- 개강 클래스 
									GROUP	BY A.CLIENT_MEM_CODE, A.CLASS_ASS_CODE,  B.MANAGE_GBN, A.TL_STT, B.CLASS_NAME, STATUS_SRT_DATE
							) CLASS ON LG.CLIENT_MEM_CODE = CLASS.CLIENT_MEM_CODE AND CLASS.RN = 1
			LEFT	OUTER JOIN G2_LCMS.dbo.TB_MTA_COURSE PARENT_CRS WITH (NOLOCK) ON STU.FINAL_CRS_CODE = PARENT_CRS.COURSE_CODE
			LEFT	OUTER JOIN G2_LCMS.dbo.TB_MTA_COURSE CRS WITH (NOLOCK) ON PARENT_CRS.PARENT_CRS_CODE = CRS.COURSE_CODE	
)A
ORDER	BY A.CLIENT_NAME, A.MEMBER_CODE
--ORDER	BY A.LOG_DTTM
	</select>
	
	<!-- 최종 insert -->
	<insert id="ins_eventMsg" parameterType="eventVO">
	
		INSERT	INTO DBO.TB_MKB_EVENT_ENTER (
										EVENT_NO				-- INT
										, EVENT_SCHEDULE_SEQ	-- INT
										, CLIENT_MEM_CODE		-- INT
										, PRODUCT_NO			-- INT
										, WIN_YN				-- NCHAR(1)
										, EVENT_MESSAGE			-- NVARCHAR(MAX)
										, STUDENT_STT_CODE		-- NCHAR(2)
										, FIRST_REG_DTTM		-- DATETIME
										, FIRST_REG_MEM_CODE	-- NVARCHAR(10)
										, FIRST_REG_IP			-- NVARCHAR(23)
								)	
		VALUES	(1, 1, #{client_mem_code}, #{product_no}, #{win_yn}, #{event_message}, #{student_stt_code}, GETDATE(), #{first_reg_mem_code}, #{first_reg_ip})
	</insert>
	<!-- 상품 수 차감  -->
	<update id="ups_product_sub" parameterType="eventVO">
	UPDATE	DBO.TB_MKB_EVENT_PRODUCT_CONFIG_CLIENT	
		
		SET		LEFT_PRODUCT_CNT = LEFT_PRODUCT_CNT - 1			-- INT
		, LAST_UPD_DTTM = GETDATE()						-- DATETIME
		, LAST_UPD_MEM_CODE = #{first_reg_mem_code}			-- NVARCHAR(10)
		, LAST_UPD_IP =#{first_reg_ip}						-- NVARCHAR(23)
		WHERE	EVENT_NO = 1									
		AND		PRODUCT_NO = #{product_no}										-- INT
		AND		CLIENT_CODE =#{client_code}						-- NVARCHAR(10)
		AND		LEFT_PRODUCT_CNT > 0
		AND		EVENT_SCHEDULE_SEQ = 1
	</update>
	
	<!-- 응모자 차감  -->
	<update id="ups_targerCnt_sub" parameterType="eventVO">
	
	UPDATE	DBO.TB_MKB_EVENT_CLIENT				
	SET		LEFT_TARGET_CNT = LEFT_TARGET_CNT - 1
		, LAST_UPD_DTTM = GETDATE()
		, LAST_UPD_MEM_CODE = #{first_reg_mem_code}
		, LAST_UPD_IP = #{first_reg_ip}
	WHERE	EVENT_NO = 1
	AND		CLIENT_CODE = #{client_code}			-- NVARCHAR(10)
	AND		LEFT_TARGET_CNT > 0
	
	</update>

</mapper>